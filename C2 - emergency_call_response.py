# -*- coding: utf-8 -*-
"""emergency_call_response

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/embedded/projects/qwiklabs-gcp-04-6a050d0640a7/locations/us-central1/repositories/05b5b6c3-49ea-462c-b32d-26cc5c9ee32f
"""

# Commented out IPython magic to ensure Python compatibility.
# #create dataset
# %%bigquery
# CREATE SCHEMA IF NOT EXISTS emergency_calls
# OPTIONS(
# location="us",
# default_table_expiration_days=14);

# Commented out IPython magic to ensure Python compatibility.
# #create Table
# %%bigquery
# CREATE OR REPLACE EXTERNAL TABLE `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_raw_table`
# OPTIONS (
#   format = 'CSV',
#   uris = ['gs://labs.roitraining.com/data-to-ai-workshop/emergency_calls_response_times.csv'],
#   skip_leading_rows = 1,
#   allow_jagged_rows = false,
#   allow_quoted_newlines = false,
#   field_delimiter = ',',
#   max_bad_records = 10
# )

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery
# CREATE OR REPLACE TABLE `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_encoded_table` AS (
#   SELECT
#     * EXCEPT (
#       call_type, weather_condition, day_of_week, traffic_level
#     ),
#   --call_type
#   CASE WHEN call_type = 'Police' THEN 1 ELSE 0 END AS call_type_police,
#   CASE WHEN call_type = 'Medical' THEN 1 ELSE 0 END AS call_type_medical,
#   CASE WHEN call_type = 'Fire' THEN 1 ELSE 0 END AS call_type_fire,
#   CASE WHEN call_type = 'Rescue' THEN 1 ELSE 0 END AS call_type_rescue,
#   --weather
#   CASE WHEN weather_condition = 'Rainy' THEN 1 ELSE 0 END AS call_type_rainy,
#   CASE WHEN weather_condition = 'Snowy' THEN 1 ELSE 0 END AS call_type_snowy,
#   CASE WHEN weather_condition = 'Sunny' THEN 1 ELSE 0 END AS call_type_sunny,
#   CASE WHEN weather_condition = 'Windy' THEN 1 ELSE 0 END AS call_type_windy,
#   --day_of_week
#   CASE WHEN day_of_week = 'Sunday' THEN 1 ELSE 0 END AS call_type_sunday,
#   CASE WHEN day_of_week = 'Monday' THEN 1 ELSE 0 END AS call_type_Monday,
#   CASE WHEN day_of_week = 'Tuesday' THEN 1 ELSE 0 END AS call_type_Tuesday,
#   CASE WHEN day_of_week = 'Wednesday' THEN 1 ELSE 0 END AS call_type_Wednesday,
#   CASE WHEN day_of_week = 'Thursday' THEN 1 ELSE 0 END AS call_type_Thursday,
#   CASE WHEN day_of_week = 'Friday' THEN 1 ELSE 0 END AS call_type_Friday,
#   CASE WHEN day_of_week = 'Saturday' THEN 1 ELSE 0 END AS call_type_Saturday,
#   -- traffic_level
#   CASE WHEN traffic_level = 'High' THEN 1 ELSE 0 END AS traffic_level_high,
#   CASE WHEN traffic_level = 'Medium' THEN 1 ELSE 0 END AS traffic_level_medium,
#   CASE WHEN traffic_level = 'Low' THEN 1 ELSE 0 END AS traffic_level_low,
# 
# FROM
#   `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_raw_table`
# );

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery
# CREATE OR REPLACE MODEL `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_model`
# OPTIONS (model_type='linear_reg',
# input_label_cols=['response_time']) AS
# SELECT * FROM `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_encoded_table`
# WHERE response_time IS NOT NULL AND call_timestamp BETWEEN '2023-01-01' AND '2023-11-30';

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery evaluate_model
# #standardSQL
# SELECT * FROM
#   ML.EVALUATE(MODEL `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_model`);

evaluate_model

# Commented out IPython magic to ensure Python compatibility.
# %%bigquery prediction
# SELECT * FROM ML.PREDICT (
#   MODEL`qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_model`,
#     (SELECT * FROM `qwiklabs-gcp-04-6a050d0640a7.emergency_calls.emergency_calls_encoded_table`
#   WHERE response_time IS NOT NULL and call_timestamp BETWEEN '2023-12-01' AND '2023-12-31')
# )

prediction
